// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  password    String
  roles       UserRole[]
  permissions UserPermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  calls       Call[]
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  users       UserRole[]
  permissions RolePermission[]
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String           @unique
  roles RolePermission[]
  users UserPermission[]
}

model UserRole {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int

  @@id([userId, roleId])
  @@index([userId])
  @@index([roleId])
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int

  @@id([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
}

model UserPermission {
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int

  @@id([userId, permissionId])
  @@index([userId])
  @@index([permissionId])
}

model DonorCategory {
  id          Int      @id @default(autoincrement())
  arabicName  String?  @db.Text
  englishName String?  @db.Text
  donors      Donor[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("donors_categories")
  @@index([createdAt])
}

model Donor {
  id           Int           @id @default(autoincrement())
  arabicName   String?      @db.Text @map("donors_arabic_name")
  englishName  String?      @db.Text @map("donors_english_name")
  regionId     Int?         @map("donors_regions_id")
  categoryId   Int?         @map("donors_donors_categories_id")
  isPartner    Int?         @map("donors_is_partner")
  fax         String?      @db.Text
  address     String?      @db.Text
  website     String?      @db.Text
  workField   String?      @db.Text @map("work_field")
  gender      Gender?
  phone       String?      @db.Text
  email       String?      @db.Text
  notes       String?      @db.Text
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  
  category    DonorCategory? @relation(fields: [categoryId], references: [id])
  region      Region?        @relation("RegionToDonors", fields: [regionId], references: [id])
  calls       Call[]

  @@map("donors")
  @@index([categoryId])
  @@index([regionId])
  @@index([isPartner])
  @@index([createdAt])
  @@index([englishName(length: 191)])
  @@index([arabicName(length: 191)])
}

enum Gender {
  male
  female
  other
}

model Region {
  id        Int      @id @default(autoincrement()) @map("regions_id")
  name      String   @db.Text @map("regions_name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  donors    Donor[]  @relation("RegionToDonors")

  @@map("regions")
  @@index([name(length: 191)])
  @@index([createdAt])
}

model Call {
  id                Int       @id @default(autoincrement()) @map("call_id")
  name              String    @db.Text @map("call_name")
  focalPoint        String?   @db.Text @map("call_focal_point")
  budget            String?   @db.Text @map("call_budjet")
  currency          String    @db.Text @map("call_currency")
  donorContribution String?   @db.Text @map("doner_contribution")
  uawcContribution  String?   @db.Text @map("uawc_contribution")
  startDate         DateTime? @map("start_date")
  endDate           DateTime? @map("end_date")
  insertDate        DateTime  @default(now()) @map("insert_date")
  insertUserId      Int       @map("insert_user_id")
  donorsId          Int       @map("donors_id")
  
  donor    Donor @relation(fields: [donorsId], references: [id])
  user     User  @relation(fields: [insertUserId], references: [id])

  @@map("calls")
  @@index([donorsId])
  @@index([insertUserId])
  @@index([startDate])
  @@index([endDate])
  @@index([insertDate])
  @@index([name(length: 191)])
}
